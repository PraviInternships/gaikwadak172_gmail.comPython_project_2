name: Code Coverage (Python)

on:
  push:
    branches:
      - main
    paths:
      - '**/*.py'

  pull_request:
    branches:
      - main
    paths:
      - '**/*.py'

  workflow_dispatch:  # Allows manual triggering of the workflow
    inputs:
      custom_username:
        description: 'Enter custom username (default is "default-user")'
        required: false
        default: 'default-user'  # You can specify a default username here

jobs:
  test:
    name: Run Tests and Upload Coverage
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # Step 3: Create requirements.txt dynamically
      - name: Create requirements.txt
        run: |
          echo "pytest" > requirements.txt
          echo "pytest-cov" >> requirements.txt

      # Step 4: Install dependencies from requirements.txt
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 5: Run tests with coverage
      - name: Run tests with coverage
        run: |
          export PYTHONPATH=$PWD
          pytest --cov=app --cov-report=xml --cov-report=html

      # Step 6: Create `docs/` Folder and Replace User Folder with New Report
      - name: Create `docs/` Folder and Replace User Folder with New Report
        run: |
          USERNAME="${{ github.event.inputs.custom_username || 'default-user' }}"
          DOCS_FOLDER="docs/$USERNAME"
          mkdir -p "$DOCS_FOLDER"
          if [ -d "htmlcov" ]; then
            mv htmlcov "$DOCS_FOLDER/coverage"
          else
            echo "Coverage report not found. Exiting."
            exit 1
          fi

      # Step 7: Upload Coverage Reports as Artifact
      - name: Upload Coverage Reports as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: python-coverage
          path: docs/${{ github.event.inputs.custom_username || 'default-user' }}/coverage/

      # Step 8: Commit and Push Coverage Reports to GitHub Pages
      - name: Commit and Push Coverage Reports to GitHub Pages
  
        run: |
         git config user.name "GitHub Actions"
         git config user.email "actions@github.com"
        
         git add docs/${{ github.event.inputs.custom_username || 'default-user' }}/
         git commit -m "Update Python coverage report for ${{ github.event.inputs.custom_username || 'default-user' }}"
         git push https://x-access-token:${GH_PAT}@github.com/${{ github.repository }} main --force       
     
      # Step 9: Clean up coverage directory
      - name: Clean up coverage directory
        run: rm -rf htmlcov/
